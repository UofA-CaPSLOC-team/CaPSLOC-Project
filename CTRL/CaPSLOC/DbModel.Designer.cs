//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DbModel", "ALTData", "ALT", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CaPSLOC.ALT), "Data", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CaPSLOC.Data), true)]
[assembly: EdmRelationshipAttribute("DbModel", "DataLocation", "Data", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CaPSLOC.Data), "Location", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CaPSLOC.Location))]

#endregion

namespace CaPSLOC
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DbModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DbModelContainer object using the connection string found in the 'DbModelContainer' section of the application configuration file.
        /// </summary>
        public DbModelContainer() : base("name=DbModelContainer", "DbModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DbModelContainer object.
        /// </summary>
        public DbModelContainer(string connectionString) : base(connectionString, "DbModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DbModelContainer object.
        /// </summary>
        public DbModelContainer(EntityConnection connection) : base(connection, "DbModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Location> Locations
        {
            get
            {
                if ((_Locations == null))
                {
                    _Locations = base.CreateObjectSet<Location>("Locations");
                }
                return _Locations;
            }
        }
        private ObjectSet<Location> _Locations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Script> Scripts
        {
            get
            {
                if ((_Scripts == null))
                {
                    _Scripts = base.CreateObjectSet<Script>("Scripts");
                }
                return _Scripts;
            }
        }
        private ObjectSet<Script> _Scripts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ALT> ALTs
        {
            get
            {
                if ((_ALTs == null))
                {
                    _ALTs = base.CreateObjectSet<ALT>("ALTs");
                }
                return _ALTs;
            }
        }
        private ObjectSet<ALT> _ALTs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Data> Data
        {
            get
            {
                if ((_Data == null))
                {
                    _Data = base.CreateObjectSet<Data>("Data");
                }
                return _Data;
            }
        }
        private ObjectSet<Data> _Data;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Locations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocations(Location location)
        {
            base.AddObject("Locations", location);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Scripts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScripts(Script script)
        {
            base.AddObject("Scripts", script);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ALTs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToALTs(ALT aLT)
        {
            base.AddObject("ALTs", aLT);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Data EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToData(Data data)
        {
            base.AddObject("Data", data);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="ALT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ALT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ALT object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="recentlyLocated">Initial value of the RecentlyLocated property.</param>
        public static ALT CreateALT(global::System.Int32 id, global::System.String name, global::System.String address, global::System.Boolean recentlyLocated)
        {
            ALT aLT = new ALT();
            aLT.Id = id;
            aLT.Name = name;
            aLT.Address = address;
            aLT.RecentlyLocated = recentlyLocated;
            return aLT;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RecentlyLocated
        {
            get
            {
                return _RecentlyLocated;
            }
            set
            {
                OnRecentlyLocatedChanging(value);
                ReportPropertyChanging("RecentlyLocated");
                _RecentlyLocated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecentlyLocated");
                OnRecentlyLocatedChanged();
            }
        }
        private global::System.Boolean _RecentlyLocated;
        partial void OnRecentlyLocatedChanging(global::System.Boolean value);
        partial void OnRecentlyLocatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "ALTData", "Data")]
        public EntityCollection<Data> Data
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Data>("DbModel.ALTData", "Data");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Data>("DbModel.ALTData", "Data", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="Data")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Data : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Data object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="imageFilename">Initial value of the ImageFilename property.</param>
        /// <param name="imageEncoding">Initial value of the ImageEncoding property.</param>
        /// <param name="captureTime">Initial value of the CaptureTime property.</param>
        /// <param name="aLTId">Initial value of the ALTId property.</param>
        public static Data CreateData(global::System.Int32 id, global::System.String imageFilename, global::System.String imageEncoding, global::System.String captureTime, global::System.Int32 aLTId)
        {
            Data data = new Data();
            data.Id = id;
            data.ImageFilename = imageFilename;
            data.ImageEncoding = imageEncoding;
            data.CaptureTime = captureTime;
            data.ALTId = aLTId;
            return data;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageFilename
        {
            get
            {
                return _ImageFilename;
            }
            set
            {
                OnImageFilenameChanging(value);
                ReportPropertyChanging("ImageFilename");
                _ImageFilename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageFilename");
                OnImageFilenameChanged();
            }
        }
        private global::System.String _ImageFilename;
        partial void OnImageFilenameChanging(global::System.String value);
        partial void OnImageFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageEncoding
        {
            get
            {
                return _ImageEncoding;
            }
            set
            {
                OnImageEncodingChanging(value);
                ReportPropertyChanging("ImageEncoding");
                _ImageEncoding = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageEncoding");
                OnImageEncodingChanged();
            }
        }
        private global::System.String _ImageEncoding;
        partial void OnImageEncodingChanging(global::System.String value);
        partial void OnImageEncodingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CaptureTime
        {
            get
            {
                return _CaptureTime;
            }
            set
            {
                OnCaptureTimeChanging(value);
                ReportPropertyChanging("CaptureTime");
                _CaptureTime = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CaptureTime");
                OnCaptureTimeChanged();
            }
        }
        private global::System.String _CaptureTime;
        partial void OnCaptureTimeChanging(global::System.String value);
        partial void OnCaptureTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ALTId
        {
            get
            {
                return _ALTId;
            }
            set
            {
                OnALTIdChanging(value);
                ReportPropertyChanging("ALTId");
                _ALTId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ALTId");
                OnALTIdChanged();
            }
        }
        private global::System.Int32 _ALTId;
        partial void OnALTIdChanging(global::System.Int32 value);
        partial void OnALTIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "ALTData", "ALT")]
        public ALT ALT
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ALT>("DbModel.ALTData", "ALT").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ALT>("DbModel.ALTData", "ALT").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ALT> ALTReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ALT>("DbModel.ALTData", "ALT");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ALT>("DbModel.ALTData", "ALT", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "DataLocation", "Location")]
        public Location Location
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("DbModel.DataLocation", "Location").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("DbModel.DataLocation", "Location").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Location> LocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Location>("DbModel.DataLocation", "Location");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Location>("DbModel.DataLocation", "Location", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="Location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Location : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Location object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="latitude">Initial value of the Latitude property.</param>
        /// <param name="longitude">Initial value of the Longitude property.</param>
        /// <param name="altitude">Initial value of the Altitude property.</param>
        public static Location CreateLocation(global::System.Int32 id, global::System.String name, global::System.Double latitude, global::System.Double longitude, global::System.Double altitude)
        {
            Location location = new Location();
            location.Id = id;
            location.Name = name;
            location.Latitude = latitude;
            location.Longitude = longitude;
            location.Altitude = altitude;
            return location;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Latitude
        {
            get
            {
                return _Latitude;
            }
            set
            {
                OnLatitudeChanging(value);
                ReportPropertyChanging("Latitude");
                _Latitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Latitude");
                OnLatitudeChanged();
            }
        }
        private global::System.Double _Latitude;
        partial void OnLatitudeChanging(global::System.Double value);
        partial void OnLatitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Longitude
        {
            get
            {
                return _Longitude;
            }
            set
            {
                OnLongitudeChanging(value);
                ReportPropertyChanging("Longitude");
                _Longitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Longitude");
                OnLongitudeChanged();
            }
        }
        private global::System.Double _Longitude;
        partial void OnLongitudeChanging(global::System.Double value);
        partial void OnLongitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Altitude
        {
            get
            {
                return _Altitude;
            }
            set
            {
                OnAltitudeChanging(value);
                ReportPropertyChanging("Altitude");
                _Altitude = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Altitude");
                OnAltitudeChanged();
            }
        }
        private global::System.Double _Altitude;
        partial void OnAltitudeChanging(global::System.Double value);
        partial void OnAltitudeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DbModel", "DataLocation", "Data")]
        public EntityCollection<Data> Data
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Data>("DbModel.DataLocation", "Data");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Data>("DbModel.DataLocation", "Data", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DbModel", Name="Script")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Script : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Script object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="content">Initial value of the Content property.</param>
        /// <param name="shared">Initial value of the Shared property.</param>
        public static Script CreateScript(global::System.Int32 id, global::System.String name, global::System.String description, global::System.String content, global::System.Boolean shared)
        {
            Script script = new Script();
            script.Id = id;
            script.Name = name;
            script.Description = description;
            script.Content = content;
            script.Shared = shared;
            return script;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Shared
        {
            get
            {
                return _Shared;
            }
            set
            {
                OnSharedChanging(value);
                ReportPropertyChanging("Shared");
                _Shared = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Shared");
                OnSharedChanged();
            }
        }
        private global::System.Boolean _Shared;
        partial void OnSharedChanging(global::System.Boolean value);
        partial void OnSharedChanged();

        #endregion
    
    }

    #endregion
    
}
